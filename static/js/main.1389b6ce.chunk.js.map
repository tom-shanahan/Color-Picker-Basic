{"version":3,"sources":["reportWebVitals.js","Components/HueSpectrum.js","Components/SaturationSpectrum.js","Components/DefaultColor.js","Components/RelatedColors.js","Components/ColorEditor.js","ColorPicker.js","Components/ColorUtilities.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","HueSpectrum","props","state","hue","getPointerPosition","bind","updateHue","handleChange","handleMouseUp","handleMouseDown","getContainerRenderWindow","handleMouseMove","element","this","removeEventListener","event","addEventListener","yPos","onChange","hsv","bounds","document","getElementById","getBoundingClientRect","clientY","top","curY","Math","max","min","height","h","round","newHsv","setState","container","renderWindow","window","contains","parent","pointerSize","value","width","tinycolor","toHsv","hueBarStyle","pointerStyle","display","className","id","style","onMouseDown","onMouseMove","onMouseUp","Component","defaultProps","SaturationSpectrum","left","pointerX","pointerY","componentWillUnmount","handleChangeThrottled","throttle","updateColor","cancel","clientX","curX","s","v","xPos","diff","floor","spectrumSquareStyle","backgroundColor","toRgbString","pointerPos","defaultColor","RelatedColors","displayType","changeDisplay","target","color0","color1","color2","color3","color4","complementColor","color","complement","toHexString","toUpperCase","mono10","lighten","mono20","mono30","analogArray","analogous","triadArray","triad","tetradArray","tetrad","current","FormControl","InputLabel","shrink","fontSize","marginBottom","Select","onClick","displayEmpty","MenuItem","disabled","background","UP_KEY_CODE","DOWN_KEY_CODE","ColorEditor","String","blurValue","componentDidUpdate","handleBlur","handleKeyDown","setUpdatedValue","prevProps","prevState","input","activeElement","Number","replace","isNaN","includes","keyCode","updatedValue","onChangeValue","colorFormat","colorLabel","colorInput","ref","onKeyDown","onBlur","type","ColorPicker","curColor","DEFAULT_COLOR","r","g","b","toRgb","hex","isValid","baseColor","toFullColor","clone","mono","desaturate","tetrad1","tetrad2","tetrad3","textAlign","paddingTop","paddingBottom","package","textTransform","border","boxShadow","marginRight","marginLeft","fontFamily","fontWeight","redInput","GreenInput","BlueInput","hexInput","HSVInput","shadowX","toString","shadowY","Grid","spacing","item","xs","marginTop","paddingLeft","paddingRight","borderRadius","padding","margin","ReactDOM","render","StrictMode"],"mappings":"+NAYeA,G,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,+DCHRQ,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,IAAK,GAET,EAAKC,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAC1B,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBACjB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,cAAgB,EAAKA,cAAcH,KAAnB,gBACrB,EAAKI,gBAAkB,EAAKA,gBAAgBJ,KAArB,gBACvB,EAAKK,yBAA2B,EAAKA,yBAAyBL,KAA9B,gBAChC,EAAKM,gBAAkB,EAAKA,gBAAgBN,KAArB,gBAXR,E,mEA+Bf,IAAMO,EAAUC,KAAKH,2BACrBE,EAAQE,oBAAoB,YAAaD,KAAKN,cAC9CK,EAAQE,oBAAoB,UAAWD,KAAKL,iB,sCAGhCO,GACZF,KAAKN,aAAaQ,GAClB,IAAMH,EAAUC,KAAKH,2BACrBE,EAAQI,iBAAiB,YAAaH,KAAKN,cAC3CK,EAAQI,iBAAiB,UAAWH,KAAKL,iB,mCAGhCO,GACT,IAAME,EAAOJ,KAAKF,gBAAgBI,GAClCF,KAAKP,UAAUW,GACfJ,KAAKZ,MAAMiB,SAASL,KAAKM,O,sCAGbJ,GACZ,IAAIK,EAASC,SAASC,eAAe,UAAUC,wBAC/C,OAAQR,EAAMS,QAAUJ,EAAOK,M,gCAGzBR,GACN,IAAIS,EAAOC,KAAKC,IAAID,KAAKE,IAAIZ,EAAMJ,KAAKZ,MAAM6B,QAAQ,GACtDjB,KAAKM,IAAIY,EAAIJ,KAAKK,MAAON,EAAOb,KAAKZ,MAAM6B,OAAU,KACrD,IAAMG,EAAM,eACLpB,KAAKM,KAEZN,KAAKqB,SAAS,CACV/B,IAAKU,KAAKM,IAAIY,IAElBlB,KAAKM,IAAMc,I,sCAIX,IAAMrB,EAAUC,KAAKH,2BACrBE,EAAQE,oBAAoB,YAAaD,KAAKN,cAC9CK,EAAQE,oBAAoB,UAAWD,KAAKL,iB,iDAM5C,IAHwB,IAChB2B,EAActB,KAAdsB,UACJC,EAAeC,QACXD,EAAaf,SAASiB,SAASH,IAAcC,EAAaG,SAAWH,GACzEA,EAAeA,EAAaG,OAEhC,OAAOH,I,2CAGW,IAAD,EACevB,KAAKZ,MAA7B6B,EADS,EACTA,OAAQU,EADC,EACDA,YAGhB,OAFiBb,KAAKK,MAAMnB,KAAKM,IAAIY,EAAID,EAAS,KACrCH,KAAKK,MAAMQ,EAAY,GAAK,K,+BAInC,IAAD,EACyC3B,KAAKZ,MAA3CwC,EADH,EACGA,MAAOD,EADV,EACUA,YAAaV,EADvB,EACuBA,OAAQY,EAD/B,EAC+BA,MAC5BvC,EAAQU,KAAKX,MAAbC,IACRU,KAAKM,IAAMwB,IAAUF,GAAOG,QAEhB,MAARzC,GAA8B,IAAfU,KAAKM,IAAIY,IACxBlB,KAAKM,IAAIY,EAAI,KAEjB,IAAMc,EAAc,CAChBf,OAAQA,EACRY,MAAOA,GAGLI,EAAe,CACjBhB,OAAQU,EAAY,GACpBE,MAAOF,EAAY,GACnBf,IAAKZ,KAAKT,qBACV2C,QAAS,SAGb,OACI,qBACIC,UAAU,eACVC,GAAG,SACHC,MAAOL,EACPM,YAAatC,KAAKJ,gBAClB2C,YAAavC,KAAKF,gBAClB0C,UAAWxC,KAAKL,cANpB,SASI,qBAAKwC,UAAU,kBAAkBE,MAAOJ,U,GAvH9BQ,aAApBtD,EAuBKuD,aAAe,CAClBrC,SAAU,KACVuB,MAAO,KACPX,OAAQ,IACRY,MAAO,GACPF,YAAa,CAAC,EAAE,KAkGTxC,Q,kBC5HTwD,E,kDACJ,WAAYvD,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXuB,IAAK,EACLgC,KAAM,EACNC,SAAU,EACVC,SAAU,GAGZ,EAAKC,qBAAuB,EAAKA,qBAAqBvD,KAA1B,gBAC5B,EAAKI,gBAAkB,EAAKA,gBAAgBJ,KAArB,gBACvB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKwD,sBAAwBC,IAAS,EAAKvD,aAAc,IACzD,EAAKI,gBAAkB,EAAKA,gBAAgBN,KAArB,gBACvB,EAAK0D,YAAc,EAAKA,YAAY1D,KAAjB,gBACnB,EAAKG,cAAgB,EAAKA,cAAcH,KAAnB,gBACrB,EAAKK,yBAA2B,EAAKA,yBAAyBL,KAA9B,gBAChC,EAAKD,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAjBT,E,mEAqCjBQ,KAAKiD,SAASE,SACd,IAAMpD,EAAUC,KAAKH,2BACrBE,EAAQE,oBAAoB,YAAaD,KAAKgD,uBAC9CjD,EAAQE,oBAAoB,UAAWD,KAAKL,iB,sCAG9BO,GACdF,KAAKgD,sBAAsB9C,GAC3B,IAAMH,EAAUC,KAAKH,2BACrBE,EAAQI,iBAAiB,YAAaH,KAAKgD,uBAC3CjD,EAAQI,iBAAiB,UAAWH,KAAKL,iB,mCAG9BO,GACXF,KAAKF,gBAAgBI,GACrBF,KAAKkD,cACLlD,KAAKM,IAAIY,EAAI,KACblB,KAAKZ,MAAMiB,SAASL,KAAKM,O,sCAGXJ,GACd,IAAIK,EAASC,SAASC,eAAe,oBAAoBC,wBACzDV,KAAKqB,SAAS,CAAEwB,SAAW3C,EAAMkD,QAAU7C,EAAOqC,KAAOE,SAAW5C,EAAMS,QAAUJ,EAAOK,Q,oCAI3F,IAAIyC,EAAOvC,KAAKC,IAAID,KAAKE,IAAIhB,KAAKX,MAAMwD,SAAU7C,KAAKZ,MAAMyC,OAAO,GAChEhB,EAAOC,KAAKC,IAAID,KAAKE,IAAIhB,KAAKX,MAAMyD,SAAU9C,KAAKZ,MAAM6B,QAAQ,GACrEjB,KAAKM,IAAIgD,EAAID,EAAOrD,KAAKZ,MAAMyC,MAC/B7B,KAAKM,IAAIiD,GAAKvD,KAAKZ,MAAM6B,OAASJ,GAAQb,KAAKZ,MAAM6B,S,sCAIrD,IAAMlB,EAAUC,KAAKH,2BACrBE,EAAQE,oBAAoB,YAAaD,KAAKgD,uBAC9CjD,EAAQE,oBAAoB,UAAWD,KAAKL,iB,iDAM5C,IAH0B,IAClB2B,EAActB,KAAdsB,UACJC,EAAeC,QACXD,EAAaf,SAASiB,SAASH,IAAcC,EAAaG,SAAWH,GAC3EA,EAAeA,EAAaG,OAE9B,OAAOH,I,2CAGa,IAAD,EACmBvB,KAAKZ,MAAnCuC,EADW,EACXA,YAAYE,EADD,EACCA,MAAOZ,EADR,EACQA,OACrBuC,EAAOxD,KAAKM,IAAIgD,EAAIzB,EACpBzB,EAAOa,EAAUjB,KAAKM,IAAIiD,EAAItC,EAC9BwC,EAAO3C,KAAK4C,MAAM/B,EAAc,GACtC,MAAO,CACLiB,KAAMY,EAAOC,EACb7C,IAAKR,EAAOqD,K,+BAIN,IAAD,EACuCzD,KAAKZ,MAA3CwC,EADD,EACCA,MAAOD,EADR,EACQA,YAAaV,EADrB,EACqBA,OAAQY,EAD7B,EAC6BA,MACpC7B,KAAKM,IAAMwB,IAAUF,GAAOG,QAC5B,IAAM4B,EAAsB,CAC1B1C,OAAQA,EACRY,MAAOA,EACP+B,gBAAiB9B,IAAU9B,KAAKM,KAAKuD,eAGjCC,EAAa9D,KAAKT,qBAClB0C,EAAe,CACnBJ,MAAOF,EACPV,OAAQU,EACRf,IAAKkD,EAAWlD,IAChBgC,KAAMkB,EAAWlB,KACjBV,QAAS,SAGX,OACE,sBACEC,UAAU,sBACVC,GAAG,mBACHC,MAAOsB,EACPrB,YAAatC,KAAKJ,gBAClB2C,YAAavC,KAAKF,gBALpB,UAQE,qBAAKqC,UAAU,mBAAf,SACE,qBAAKA,UAAU,uBAGjB,qBAAKA,UAAU,kBAAkBE,MAAOJ,W,GA/HfQ,aAA3BE,EA6BGD,aAAe,CAEpBd,MAAO,KACPX,OAAQ,IACRY,MAAO,IACPF,YAAa,GAoGFgB,QCxIAoB,EAFMjC,IAAU,OAAOC,Q,4CCShCiC,E,kDACF,WAAY5E,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACT4E,YAAa,IAEjB,EAAKC,cAAgB,EAAKA,cAAc1E,KAAnB,gBALN,E,0DAgBLU,GACVF,KAAKqB,SAAS,CACV4C,YAAa/D,EAAMiE,OAAOvC,U,+BAK9B,IAAIwC,EAAS,KACTC,EAAS,KACTC,EAAS,KACTC,EAAS,KACTC,EAAS,KAETC,EAAkB3C,IAAU9B,KAAKZ,MAAMsF,OAAOC,aAAaC,cAAcC,cACzEC,EAAShD,IAAU9B,KAAKZ,MAAMsF,OAAOK,QAAQ,IAAIH,cAAcC,cAC/DG,EAASlD,IAAU9B,KAAKZ,MAAMsF,OAAOK,QAAQ,IAAIH,cAAcC,cAC/DI,EAASnD,IAAU9B,KAAKZ,MAAMsF,OAAOK,QAAQ,IAAIH,cAAcC,cAC/DK,EAAcpD,IAAU9B,KAAKZ,MAAMsF,OAAOS,YAC1CC,EAAatD,IAAU9B,KAAKZ,MAAMsF,OAAOW,QACzCC,EAAcxD,IAAU9B,KAAKZ,MAAMsF,OAAOa,SAE1CC,EAAU1D,IAAU9B,KAAKZ,MAAMsF,OAAOE,cAAcC,cAExD,OADsB7E,KAAKX,MAArB4E,aAEF,QACIG,EAAS,KACTC,EAAS,KACTC,EAAS,KACTC,EAAS,KACTC,EAAS,KACT,MACJ,IAAK,wBACDJ,EAASoB,EACTnB,EAASI,EACTH,EAAS,KACTC,EAAS,KACTC,EAAS,KACT,MACJ,IAAK,wBACDJ,EAASoB,EACTnB,EAASS,EACTR,EAASU,EACTT,EAASU,EACTT,EAAS,KACT,MACJ,IAAK,oBACDJ,EAASoB,EACTnB,EAASa,EAAY,GAAGN,cAAcC,cACtCP,EAASY,EAAY,GAAGN,cAAcC,cACtCN,EAASW,EAAY,GAAGN,cAAcC,cACtCL,EAASU,EAAY,GAAGN,cAAcC,cACtC,MACJ,IAAK,kBACDT,EAASoB,EACTnB,EAASe,EAAW,GAAGR,cAAcC,cACrCP,EAASc,EAAW,GAAGR,cAAcC,cACrCN,EAAS,KACTC,EAAS,KACT,MACJ,IAAK,mBACDJ,EAASoB,EACTlB,EAASgB,EAAY,GAAGV,cAAcC,cACtCN,EAASe,EAAY,GAAGV,cAAcC,cACtCL,EAASc,EAAY,GAAGV,cAAcC,cAI9C,OACI,gCACI,8BACI,eAACY,EAAA,EAAD,CAAapD,MAAO,CAAER,MAAO,SAA7B,UACI,cAAC6D,EAAA,EAAD,CAAYC,QAAM,EAACxD,UAAU,kBAA7B,SACI,qBAAKA,UAAU,kBAAkBE,MAAO,CAACuD,SAAS,QAAlD,kCAEJ,qBAAKvD,MAAO,CAACwD,aAAa,UAC1B,eAACC,EAAA,EAAD,CAGIlE,MAAQ5B,KAAKX,MAAM4E,YACnB8B,QAAU/F,KAAKkE,cACf8B,cAAY,EALhB,UASI,cAACC,EAAA,EAAD,CAAUrE,MAAM,GAAGsE,UAAQ,EAA3B,SAA4B,oBAAI/D,UAAU,kBAAd,sCAC5B,cAAC8D,EAAA,EAAD,CAAUrE,MAAQ,wBAAlB,SAA4C,qBAAKO,UAAU,kBAAf,oCAC5C,cAAC8D,EAAA,EAAD,CAAUrE,MAAQ,wBAAlB,SAA4C,qBAAKO,UAAU,kBAAf,oCAC5C,cAAC8D,EAAA,EAAD,CAAUrE,MAAQ,oBAAlB,SAAwC,qBAAKO,UAAU,kBAAf,gCACxC,cAAC8D,EAAA,EAAD,CAAUrE,MAAQ,kBAAlB,SAAsC,qBAAKO,UAAU,kBAAf,8BACtC,cAAC8D,EAAA,EAAD,CAAUrE,MAAQ,mBAAlB,SAAuC,qBAAKO,UAAU,kBAAf,uCAMnD,gCAEiB,OAAXiC,GACF,qBAAKjC,UAAU,gBAAgBE,MAAO,CAAE8D,WAAY/B,GAApD,SACKA,IAGQ,OAAXC,GACF,qBAAKlC,UAAU,gBAAgBE,MAAO,CAAE8D,WAAY9B,GAApD,SACKA,IAGQ,OAAXC,GACF,qBAAKnC,UAAU,gBAAgBE,MAAO,CAAE8D,WAAY7B,GAApD,SACKA,IAGQ,OAAXC,GACF,qBAAKpC,UAAU,gBAAgBE,MAAO,CAAE8D,WAAY5B,GAApD,SACKA,IAGQ,OAAXC,GACF,qBAAKrC,UAAU,gBAAgBE,MAAO,CAAE8D,WAAY3B,GAApD,SACKA,c,GAxIG/B,aAAtBuB,EAaKtB,aAAe,CAClBgC,MAAO,MAmIAV,Q,QCzJToC,G,OAAc,IACdC,EAAgB,GAEhBC,E,kDACF,WAAYlH,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTuC,MAAO2E,OAAOnH,EAAMwC,OAAOiD,cAC3B2B,UAAWD,OAAOnH,EAAMwC,OAAOiD,eAEnC,EAAK4B,mBAAqB,EAAKA,mBAAmBjH,KAAxB,gBAC1B,EAAKkH,WAAa,EAAKA,WAAWlH,KAAhB,gBAClB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKmH,cAAgB,EAAKA,cAAcnH,KAAnB,gBACrB,EAAKoH,gBAAkB,EAAKA,gBAAgBpH,KAArB,gBAVR,E,+DAyBAqH,EAAWC,GAEtB9G,KAAKZ,MAAMwC,QAAU5B,KAAKX,MAAMuC,OAC/BiF,EAAUjF,QAAU5B,KAAKZ,MAAMwC,OAASkF,EAAUlF,QAAU5B,KAAKX,MAAMuC,QAEpE5B,KAAK+G,QAAUvG,SAASwG,cACxBhH,KAAKqB,SAAS,CAAEmF,UAAWD,OAAOvG,KAAKZ,MAAMwC,OAAOiD,gBAEpD7E,KAAKqB,SAAS,CAAEO,MAAO2E,OAAOvG,KAAKZ,MAAMwC,OAAOiD,cAAe2B,WAAYxG,KAAKX,MAAMmH,WAAaD,OAAOvG,KAAKZ,MAAMwC,OAAOiD,mB,mCAMhI7E,KAAKX,MAAMmH,WACXxG,KAAKqB,SAAS,CAAEO,MAAO5B,KAAKX,MAAMmH,UAAWA,UAAW,S,mCAInDtG,GACTF,KAAK4G,gBAAgB1G,EAAMiE,OAAOvC,MAAO1B,K,oCAI/BA,GACV,IAAM0B,EAAQqF,OAAOV,OAAOrG,EAAMiE,OAAOvC,OAAOsF,QAAQ,KAAM,KAC9D,IAAKC,MAAMvF,IAAW,CAACwE,EAAYC,GAAee,SAASlH,EAAMmH,SAAW,CACxE,IAAMC,EAAepH,EAAMmH,UAAYjB,EAAcxE,EAAQ,EAAIA,EAAQ,EACzE5B,KAAK4G,gBAAgBU,M,sCAIb1F,GACZ,IAAM2F,EAAgBvH,KAAKZ,MAAMoI,YAAX,eAA4BxH,KAAKZ,MAAMoI,YAAc5F,GAAUA,EACrF5B,KAAKZ,MAAMiB,SAASkH,GACpBvH,KAAKqB,SAAS,CAAEO,Y,+BAGV,IAAD,OAEL,OACI,sBAAKO,UAAU,eAAf,UACI,wBAAOE,MAAQrC,KAAKZ,MAAMiD,MAAMoF,WAAhC,UACMzH,KAAKZ,MAAMoI,YADjB,OAGA,uBACInF,MAAQrC,KAAKZ,MAAMiD,MAAMqF,WACzBC,IAAM,SAAAZ,GAAK,OAAI,EAAKA,MAAQA,GAC5BnF,MAAQ5B,KAAKX,MAAMuC,MACnBgG,UAAY5H,KAAK2G,cACjBtG,SAAWL,KAAKN,aAChBmI,OAAS7H,KAAK0G,oB,GA7ERjE,aAApB6D,EAoBK5D,aAAe,CAClBrC,SAAU,KACVuB,MAAO,KACPkG,KAAM,MA6DCxB,Q,qBCyKAyB,G,yDArPX,WAAY3I,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACT2I,SAAUC,GAEd,EAAKvI,aAAe,EAAKA,aAAaF,KAAlB,gBALL,E,yDAQNkF,GACT,GAAIA,EAAMwD,GAAKxD,EAAMyD,GAAKzD,EAAM0D,EAAG,CAAC,IAAD,EACftG,IAAU9B,KAAKX,MAAM2I,UAAUK,QAAzCH,EADyB,EACzBA,EAAEC,EADuB,EACvBA,EAAEC,EADqB,EACrBA,GACN1D,EAAMwD,GAAe,IAAVxD,EAAMwD,KACjBA,EAAIxD,EAAMwD,IAEVxD,EAAMyD,GAAe,IAAVzD,EAAMyD,KACjBA,EAAIzD,EAAMyD,IAEVzD,EAAM0D,GAAe,IAAV1D,EAAM0D,KACjBA,EAAI1D,EAAM0D,GAEdpI,KAAKqB,SAAS,CACV2G,SAAUlG,IAAU,CAAEoG,EAAEA,EAAEC,EAAEA,EAAEC,EAAEA,IAAKrG,eAIxC,GAAI2C,EAAMxD,GAAKwD,EAAMpB,GAAIoB,EAAMnB,EAAI,CAAC,IAAD,EACpBzB,IAAU9B,KAAKX,MAAM2I,UAAUjG,QAAzCb,EAD8B,EAC9BA,EAAEoC,EAD4B,EAC5BA,EAAEC,EAD0B,EAC1BA,GACNmB,EAAMxD,GAAe,IAAVwD,EAAMxD,KACjBA,EAAIwD,EAAMxD,IAEVwD,EAAMpB,GAAe,IAAVoB,EAAMpB,KACjBA,EAAIoB,EAAMpB,IAEVoB,EAAMnB,GAAe,IAAVmB,EAAMnB,KACjBA,EAAImB,EAAMnB,GAEdvD,KAAKqB,SAAS,CACV2G,SAAUlG,IAAU,CAAEZ,EAAEA,EAAEoC,EAAEA,EAAEC,EAAEA,IAAKxB,eAGpC2C,EAAM4D,KACPxG,IAAU4C,EAAM4D,KAAKC,WACrBvI,KAAKqB,SAAS,CACV2G,SAAUlG,IAAU4C,EAAM4D,KAAKvG,Y,+BAQ3C,IAAMyG,EC3Dd,SAAqB9D,GAAQ,IACrBxD,EAAMY,IAAU4C,GAAO3C,QAAvBb,EACN,OAAOY,IAAU,CAAEZ,EAAEA,EAAGoC,EAAG,IAAKC,EAAG,MDyDXkF,CAAYzI,KAAKX,MAAM2I,UAErCrD,EAAa+D,gBAAMF,GAAW7D,aAAaC,cAAcC,cAKvD8D,GAJY7G,IAAU9B,KAAKZ,MAAMsF,OAAOS,YAC7BrD,IAAU9B,KAAKZ,MAAMsF,OAAOW,QAC3BvD,IAAU9B,KAAKZ,MAAMsF,OAAOa,SAEjCmD,gBAAMF,GAAWzD,QAAQ,IAAI6D,WAAW,IAAIhE,cAAcC,eAIjEgE,GAHSH,gBAAMF,GAAWnD,QAAQ,GAAGT,cAAcC,cAC1C6D,gBAAMF,GAAWnD,QAAQ,GAAGT,cAAcC,cAEzC6D,gBAAMF,GAAWjD,SAAS,GAAGX,cAAcC,eACrDiE,EAAUJ,gBAAMF,GAAWjD,SAAS,GAAGX,cAAcC,cACrDkE,EAAUL,gBAAMF,GAAWjD,SAAS,GAAGX,cAAcC,cAErD4C,EAAa,CACfuB,UAAW,SACXtE,MAAO,OACPuE,WAAY,MACZC,cAAe,MACfC,QAAS,MACTC,cAAe,cAEb1B,EAAa,CACf2B,OAAQ,OACRC,UAAW,uBACXzH,MAAM,OACN0H,YAAa,MACbC,WAAY,MACZC,WAAY,SACZC,WAAY,IACZ9D,SAAU,WAGR+D,EAAW,CACbjC,WAAW,2BACJA,GADG,IAENhD,MAAM,QAEV+C,WAAW,2BACJA,GADG,IAEN/C,MAAM,MACN0E,cAAe,eAGjBQ,EAAa,CACflC,WAAW,2BACJA,GADG,IAENhD,MAAM,UAEV+C,WAAW,2BACJA,GADG,IAEN/C,MAAM,QACN0E,cAAe,eAGjBS,EAAY,CACdnC,WAAW,2BACJA,GADG,IAENhD,MAAM,OACN0E,cAAe,cAEnB3B,WAAW,2BACJA,GADG,IAEN/C,MAAM,OACN0E,cAAe,eAGjBU,EAAW,CACbpC,WAAW,2BACJA,GADG,IAENhD,MAAM,QACN0E,cAAe,YACfvH,MAAM,UAEV4F,WAAW,2BACJA,GADG,IAEN/C,MAAM,QACN0E,cAAe,eAGjBW,EAAW,CACbrC,WAAW,2BACJA,GADG,IAEN0B,cAAe,cAEnB3B,WAAW,2BACJA,GADG,IAEN2B,cAAe,eAIjBY,GAA2D,IAA/ClI,IAAU9B,KAAKX,MAAM2I,UAAUjG,QAAQuB,EAAI,KAAQ2G,WAAW,KAC1EC,GAA2D,IAA/CpI,IAAU9B,KAAKX,MAAM2I,UAAUjG,QAAQwB,EAAI,KAAQ0G,WAAW,KAEhF,OACI,qBAAK5H,MAAO,CAAE,WAAasG,GAA3B,SACI,eAACwB,EAAA,EAAD,CAAM7I,WAAS,EAAC8I,QAAS,EAAzB,UACI,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,qBAAKnI,UAAU,YAAYE,MAAO,CAAC4G,WAAW,MAAOsB,UAAU,OAA/D,SACI,qBAAIpI,UAAU,SAASE,MAAO,CAAE8D,WAAW,QAASqE,YAAY,MAAOC,aAAa,OAC9EC,aAAc,QADpB,UAEI,sBAAMvI,UAAU,aAAaE,MAAO,CAAE,SAAS2H,EAAS,SAASE,EAAS,UAAUrB,GAApF,eACA,sBAAM1G,UAAU,aAAaE,MAAO,CAAE,SAAS2H,EAAS,SAASE,EAAQ,UAAUpB,GAAnF,eACA,sBAAM3G,UAAU,aAAaE,MAAO,CAAE,SAAS2H,EAAS,SAASE,EAAQ,UAAUnB,EAAS0B,aAAa,QAAzG,eACA,sBAAMtI,UAAU,cAAcE,MAAO,CAAE,SAAS2H,EAAS,SAASE,EAAQ,UAAUvF,GAApF,wBAGA,sBAAMxC,UAAU,aAAaE,MAAO,CAAE,SAAS2H,EAAS,SAASE,EAAQ,UAAUrB,GAAnF,eACA,sBAAM1G,UAAU,aAAaE,MAAO,CAAE,SAAS2H,EAAS,SAASE,EAAQ,UAAUpB,GAAnF,eACA,sBAAM3G,UAAU,aAAaE,MAAO,CAAE,SAAS2H,EAAS,SAASE,EAAQ,UAAUnB,GAAnF,sBAIZ,cAACoB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,qBAAKnI,UAAU,YAAf,SACI,sBAAKE,MAAO,CAAEH,QAAQ,OAAQsH,WAAW,QAAzC,UACI,sBAAKnH,MAAO,CAAER,MAAM,SAApB,UACI,cAAC,EAAD,CAAoBD,MAAQE,IAAU9B,KAAKX,MAAM2I,UAAUjG,QAAU1B,SAAWL,KAAKN,eACrF,qBAAKyC,UAAU,gBAAgBE,MAAO,CAAE8D,WAAYrE,IAAU9B,KAAKX,MAAM2I,UAAUpD,cAAe/C,MAAM,SAAxG,SACMC,IAAU9B,KAAKX,MAAM2I,UAAUpD,cAAcC,mBAGvD,qBAAKxC,MAAO,GAAZ,SACI,cAAC,EAAD,CAAaT,MAAQE,IAAU9B,KAAKX,MAAM2I,UAAUjG,QAAU1B,SAAWL,KAAKN,iBAElF,qBAAK2C,MAAO,CAAEH,QAAQ,OAAQyI,QAAQ,MAAOJ,UAAU,OAAQ1E,aAAa,OAAQqD,cAAc,QAAlG,SACI,gCACI,qBAAK7G,MAAO,CAACsI,QAAS,OAAtB,SACI,cAAC,EAAD,CACInD,YAAY,MACZ5F,MAAQE,IAAU9B,KAAKX,MAAM2I,UAAUpD,cACvCvE,SAAWL,KAAKN,aAChB2C,MAAO,CAAEqF,WAAYoC,EAASpC,WAAYD,WAAYqC,EAASrC,gBAGvE,sBAAKpF,MAAO,CAACsI,QAAS,OAAtB,UACI,cAAC,EAAD,CACInD,YAAY,IACZ5F,MAAQE,IAAU9B,KAAKX,MAAM2I,UAAUK,QAAQH,EAC/C7H,SAAWL,KAAKN,aAChB2C,MAAO,CAAEqF,WAAYiC,EAASjC,WAAYD,WAAYkC,EAASlC,cAEnE,cAAC,EAAD,CACID,YAAY,IACZ5F,MAAQE,IAAU9B,KAAKX,MAAM2I,UAAUK,QAAQF,EAC/C9H,SAAWL,KAAKN,aAChB2C,MAAO,CAAEqF,WAAYkC,EAAWlC,WAAYD,WAAYmC,EAAWnC,cAEvE,cAAC,EAAD,CACID,YAAY,IACZ5F,MAAQE,IAAU9B,KAAKX,MAAM2I,UAAUK,QAAQD,EAC/C/H,SAAWL,KAAKN,aAChB2C,MAAO,CAAEqF,WAAYmC,EAAUnC,WAAYD,WAAYoC,EAAUpC,iBAGzE,sBAAKpF,MAAO,CAACsI,QAAS,OAAtB,UACI,cAAC,EAAD,CACInD,YAAY,IACZ5F,MAAQd,KAAKK,MAAMW,IAAU9B,KAAKX,MAAM2I,UAAUjG,QAAQb,GAC1Db,SAAWL,KAAKN,aAChB2C,MAAO,CAAEqF,WAAYqC,EAASrC,WAAYD,WAAYsC,EAAStC,cAEnE,cAAC,EAAD,CACID,YAAY,IACZ5F,MAAQd,KAAKK,MAA+C,IAAzCW,IAAU9B,KAAKX,MAAM2I,UAAUjG,QAAQuB,GAAO,IACjEjD,SAAWL,KAAKN,aAChB2C,MAAO,CAAEqF,WAAYqC,EAASrC,WAAYD,WAAYsC,EAAStC,cAEnE,cAAC,EAAD,CACID,YAAY,IACZ5F,MAAQd,KAAKK,MAA+C,IAAzCW,IAAU9B,KAAKX,MAAM2I,UAAUjG,QAAQwB,GAAO,IACjElD,SAAWL,KAAKN,aAChB2C,MAAO,CAAEqF,WAAYqC,EAASrC,WAAYD,WAAYsC,EAAStC,6BAQ3F,cAAC0C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,qBAAKnI,UAAU,YAAf,SACI,qBAAKE,MAAO,CAAEH,QAAQ,OAAQ0I,OAAO,OAAQ/I,MAAM,SAAnD,SACI,cAAC,EAAD,CAAe6C,MAAQ1E,KAAKX,MAAM2I,0B,GA5OxCvF,cEP1BoI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvK,SAASC,eAAe,SAM1B/B,K","file":"static/js/main.1389b6ce.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport tinycolor from \"tinycolor2\";\r\n\r\nclass HueSpectrum extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hue: 0,\r\n        }\r\n        this.getPointerPosition = this.getPointerPosition.bind(this);\r\n        this.updateHue = this.updateHue.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleMouseUp = this.handleMouseUp.bind(this);\r\n        this.handleMouseDown = this.handleMouseDown.bind(this);\r\n        this.getContainerRenderWindow = this.getContainerRenderWindow.bind(this);\r\n        this.handleMouseMove = this.handleMouseMove.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        onChange: PropTypes.func,\r\n        value: PropTypes.any,\r\n        height: PropTypes.number,\r\n        width: PropTypes.number,\r\n        pointerSize: PropTypes.array,\r\n    }\r\n\r\n    static defaultProps = {\r\n        onChange: null,\r\n        value: null,\r\n        height: 300,\r\n        width: 60,\r\n        pointerSize: [4,58],\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const element = this.getContainerRenderWindow()\r\n        element.removeEventListener('mousemove', this.handleChange)\r\n        element.removeEventListener('mouseup', this.handleMouseUp)\r\n    }\r\n\r\n    handleMouseDown(event) {\r\n        this.handleChange(event)\r\n        const element = this.getContainerRenderWindow()\r\n        element.addEventListener(\"mousemove\", this.handleChange)\r\n        element.addEventListener(\"mouseup\", this.handleMouseUp)\r\n    }\r\n\r\n    handleChange(event) {\r\n        const yPos = this.handleMouseMove(event);\r\n        this.updateHue(yPos);\r\n        this.props.onChange(this.hsv)\r\n    }\r\n\r\n    handleMouseMove(event) {\r\n        let bounds = document.getElementById('hueBar').getBoundingClientRect()\r\n        return (event.clientY - bounds.top);\r\n    }\r\n\r\n    updateHue(yPos) {\r\n        let curY = Math.max(Math.min(yPos, this.props.height),0)\r\n        this.hsv.h = Math.round((curY / this.props.height) * 360);\r\n        const newHsv = {\r\n            ...this.hsv,\r\n        };\r\n        this.setState({\r\n            hue: this.hsv.h,\r\n        });\r\n        this.hsv = newHsv;\r\n    }\r\n\r\n    handleMouseUp() {\r\n        const element = this.getContainerRenderWindow()\r\n        element.removeEventListener('mousemove', this.handleChange)\r\n        element.removeEventListener('mouseup', this.handleMouseUp)\r\n    }\r\n\r\n    getContainerRenderWindow() {\r\n        const { container } = this\r\n        let renderWindow = window\r\n        while (!renderWindow.document.contains(container) && renderWindow.parent !== renderWindow) {\r\n            renderWindow = renderWindow.parent\r\n        }\r\n        return renderWindow\r\n    }\r\n\r\n    getPointerPosition() {\r\n        const { height, pointerSize } = this.props;\r\n        const position = Math.round(this.hsv.h * height / 360);\r\n        const diff = Math.round(pointerSize[0] / 2);\r\n        return position - diff;\r\n    }\r\n\r\n    render() {\r\n        const { value, pointerSize, height, width } = this.props;\r\n        const { hue } = this.state;\r\n        this.hsv = tinycolor(value).toHsv();\r\n        // Prevents pointer from returning to top after max hue\r\n        if (hue === 360 && this.hsv.h === 0) {\r\n            this.hsv.h = 360;\r\n        }\r\n        const hueBarStyle = {\r\n            height: height,\r\n            width: width,\r\n        };\r\n\r\n        const pointerStyle = {\r\n            height: pointerSize[0],\r\n            width: pointerSize[1],\r\n            top: this.getPointerPosition(),\r\n            display: 'block',\r\n        };\r\n\r\n        return (\r\n            <div\r\n                className=\"hue-spectrum\"\r\n                id=\"hueBar\"\r\n                style={hueBarStyle}\r\n                onMouseDown={this.handleMouseDown}\r\n                onMouseMove={this.handleMouseMove}\r\n                onMouseUp={this.handleMouseUp}\r\n            >\r\n                {/*TODO: change pointer class*/}\r\n                <div className=\"saturation-drag\" style={pointerStyle} >\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HueSpectrum;\r\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport throttle from 'lodash/throttle'\nimport tinycolor from \"tinycolor2\";\n// import * as _ from underscore;\n\nclass SaturationSpectrum extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      top: 0,\n      left: 0,\n      pointerX: 0,\n      pointerY: 0,\n    }\n\n    this.componentWillUnmount = this.componentWillUnmount.bind(this);\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeThrottled = throttle(this.handleChange, 25)\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.updateColor = this.updateColor.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n    this.getContainerRenderWindow = this.getContainerRenderWindow.bind(this);\n    this.getPointerPosition = this.getPointerPosition.bind(this);\n  }\n\n  static propTypes = {\n    onChange: PropTypes.func,\n    value: PropTypes.any,\n    height: PropTypes.number,\n    width: PropTypes.number,\n    pointerSize: PropTypes.number,\n  }\n\n  static defaultProps = {\n    // onChange: (),\n    value: null,\n    height: 300,\n    width: 300,\n    pointerSize: 7,\n  }\n\n  componentWillUnmount() {\n    this.throttle.cancel()\n    const element = this.getContainerRenderWindow()\n    element.removeEventListener('mousemove', this.handleChangeThrottled)\n    element.removeEventListener('mouseup', this.handleMouseUp)\n  }\n\n  handleMouseDown(event) {\n    this.handleChangeThrottled(event)\n    const element = this.getContainerRenderWindow()\n    element.addEventListener(\"mousemove\", this.handleChangeThrottled)\n    element.addEventListener(\"mouseup\", this.handleMouseUp)\n  }\n\n  handleChange(event) {\n    this.handleMouseMove(event)\n    this.updateColor()\n    this.hsv.h = null;\n    this.props.onChange(this.hsv)\n  }\n\n  handleMouseMove(event) {\n    let bounds = document.getElementById('saturationSquare').getBoundingClientRect()\n    this.setState({ pointerX: (event.clientX - bounds.left), pointerY: (event.clientY - bounds.top) });\n  }\n\n  updateColor() {\n    let curX = Math.max(Math.min(this.state.pointerX, this.props.width),0)\n    let curY = Math.max(Math.min(this.state.pointerY, this.props.height),0)\n    this.hsv.s = curX / this.props.width;\n    this.hsv.v = (this.props.height - curY) / this.props.height;\n  }\n\n  handleMouseUp() {\n    const element = this.getContainerRenderWindow()\n    element.removeEventListener('mousemove', this.handleChangeThrottled)\n    element.removeEventListener('mouseup', this.handleMouseUp)\n  }\n\n  getContainerRenderWindow() {\n    const { container } = this\n    let renderWindow = window\n    while (!renderWindow.document.contains(container) && renderWindow.parent !== renderWindow) {\n      renderWindow = renderWindow.parent\n    }\n    return renderWindow\n  }\n\n  getPointerPosition() {\n    const { pointerSize,width, height } = this.props;\n    const xPos = this.hsv.s * width;\n    const yPos = height - (this.hsv.v * height);\n    const diff = Math.floor(pointerSize / 2);\n    return {\n      left: xPos - diff,\n      top: yPos - diff,\n    };\n  }\n\n  render() {\n    const { value, pointerSize, height, width } = this.props;\n    this.hsv = tinycolor(value).toHsv();\n    const spectrumSquareStyle = {\n      height: height,\n      width: width,\n      backgroundColor: tinycolor(this.hsv).toRgbString(),\n    };\n\n    const pointerPos = this.getPointerPosition();\n    const pointerStyle = {\n      width: pointerSize,\n      height: pointerSize,\n      top: pointerPos.top,\n      left: pointerPos.left,\n      display: 'block',\n    };\n\n    return (\n      <div\n        className=\"saturation-spectrum\"\n        id=\"saturationSquare\"\n        style={spectrumSquareStyle}\n        onMouseDown={this.handleMouseDown}\n        onMouseMove={this.handleMouseMove}\n      >\n        {/* Saturation gradient  */}\n        <div className=\"saturation-white\">\n          <div className=\"saturation-black\" />\n        </div>\n        {/* Pointer */}\n        <div className=\"saturation-drag\" style={pointerStyle}>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SaturationSpectrum;\n","import tinycolor from \"tinycolor2\";\n\nconst defaultColor = tinycolor('red').toHsv();\n\nexport default defaultColor;\n","import React, { Component } from 'react';\r\nimport tinycolor from \"tinycolor2\";\r\nimport \"../App.css\"\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport PropTypes from \"prop-types\";\r\nimport {Typography} from \"@material-ui/core\";\r\n\r\nclass RelatedColors extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            displayType: \"\",\r\n        }\r\n        this.changeDisplay = this.changeDisplay.bind(this);\r\n    }\r\n\r\n    static propTypes = {\r\n        color: PropTypes.any,\r\n    }\r\n\r\n    static defaultProps = {\r\n        color: null,\r\n    }\r\n\r\n    changeDisplay(event) {\r\n        this.setState({\r\n            displayType: event.target.value,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let color0 = null;\r\n        let color1 = null;\r\n        let color2 = null;\r\n        let color3 = null;\r\n        let color4 = null;\r\n\r\n        let complementColor = tinycolor(this.props.color).complement().toHexString().toUpperCase();\r\n        let mono10 = tinycolor(this.props.color).lighten(10).toHexString().toUpperCase();\r\n        let mono20 = tinycolor(this.props.color).lighten(20).toHexString().toUpperCase();\r\n        let mono30 = tinycolor(this.props.color).lighten(30).toHexString().toUpperCase();\r\n        let analogArray = tinycolor(this.props.color).analogous();\r\n        let triadArray = tinycolor(this.props.color).triad();\r\n        let tetradArray = tinycolor(this.props.color).tetrad();\r\n\r\n        let current = tinycolor(this.props.color).toHexString().toUpperCase();\r\n        let { displayType } = this.state;\r\n        switch (displayType) {\r\n            default:\r\n                color0 = null;\r\n                color1 = null;\r\n                color2 = null;\r\n                color3 = null;\r\n                color4 = null;\r\n                break;\r\n            case 'Complementary Colors:':\r\n                color0 = current;\r\n                color1 = complementColor;\r\n                color2 = null;\r\n                color3 = null;\r\n                color4 = null;\r\n                break;\r\n            case 'Monochromatic Colors:':\r\n                color0 = current;\r\n                color1 = mono10;\r\n                color2 = mono20;\r\n                color3 = mono30;\r\n                color4 = null;\r\n                break;\r\n            case 'Analogous Colors:':\r\n                color0 = current;\r\n                color1 = analogArray[1].toHexString().toUpperCase();\r\n                color2 = analogArray[2].toHexString().toUpperCase();\r\n                color3 = analogArray[4].toHexString().toUpperCase();\r\n                color4 = analogArray[5].toHexString().toUpperCase();\r\n                break;\r\n            case 'Triadic Colors:':\r\n                color0 = current;\r\n                color1 = triadArray[1].toHexString().toUpperCase();\r\n                color2 = triadArray[2].toHexString().toUpperCase();\r\n                color3 = null;\r\n                color4 = null;\r\n                break;\r\n            case 'Tetradic Colors:':\r\n                color0 = current;\r\n                color2 = tetradArray[1].toHexString().toUpperCase();\r\n                color3 = tetradArray[2].toHexString().toUpperCase();\r\n                color4 = tetradArray[3].toHexString().toUpperCase();\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <FormControl style={{ width: '400px'}}>\r\n                        <InputLabel shrink className='scheme-selector'>\r\n                            <div className='scheme-selector' style={{fontSize:'25px'}}>Color Scheme Type:</div>\r\n                        </InputLabel>\r\n                        <div style={{marginBottom:'30px'}}/>\r\n                        <Select\r\n                            // labelId=\"demo-simple-select-placeholder-label-label\"\r\n                            // id=\"demo-simple-select-placeholder-label\"\r\n                            value={ this.state.displayType }\r\n                            onClick={ this.changeDisplay }\r\n                            displayEmpty\r\n                            // className={classes.selectEmpty}\r\n\r\n                        >\r\n                            <MenuItem value=\"\" disabled><em className='scheme-selector'>Choose a Color Scheme!</em></MenuItem>\r\n                            <MenuItem value={ 'Complementary Colors:' }><div className='scheme-selector'>Complementary Colors</div></MenuItem>\r\n                            <MenuItem value={ 'Monochromatic Colors:' }><div className='scheme-selector'>Monochromatic Colors</div></MenuItem>\r\n                            <MenuItem value={ 'Analogous Colors:' }><div className='scheme-selector'>Analogous Colors</div></MenuItem>\r\n                            <MenuItem value={ 'Triadic Colors:' }><div className='scheme-selector'>Triadic Colors</div></MenuItem>\r\n                            <MenuItem value={ 'Tetradic Colors:' }><div className='scheme-selector'>Tetradic Colors</div></MenuItem>\r\n                        </Select>\r\n                        {/*<FormHelperText>Select a Color Scheme</FormHelperText>*/}\r\n                    </FormControl>\r\n                </div>\r\n\r\n                <div>\r\n                    {/*<h4>{ displayType }</h4>*/}\r\n                    {(color0 !== null) &&\r\n                    <div className=\"colorSwatches\" style={{ background: color0 }}>\r\n                        {color0}\r\n                        </div>\r\n                    }\r\n                    {(color1 !== null) &&\r\n                    <div className=\"colorSwatches\" style={{ background: color1 }}>\r\n                        {color1}\r\n                    </div>\r\n                    }\r\n                    {(color2 !== null) &&\r\n                    <div className=\"colorSwatches\" style={{ background: color2 }}>\r\n                        {color2}\r\n                    </div>\r\n                    }\r\n                    {(color3 !== null) &&\r\n                    <div className=\"colorSwatches\" style={{ background: color3 }}>\r\n                        {color3}\r\n                    </div>\r\n                    }\r\n                    {(color4 !== null) &&\r\n                    <div className=\"colorSwatches\" style={{ background: color4 }}>\r\n                        {color4}\r\n                    </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RelatedColors;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport reactCSS from 'reactcss';\r\nconst UP_KEY_CODE = 38\r\nconst DOWN_KEY_CODE = 40\r\n\r\nclass ColorEditor extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            value: String(props.value).toUpperCase(),\r\n            blurValue: String(props.value).toUpperCase(),\r\n        }\r\n        this.componentDidUpdate = this.componentDidUpdate.bind(this);\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleKeyDown = this.handleKeyDown.bind(this);\r\n        this.setUpdatedValue = this.setUpdatedValue.bind(this);\r\n    }\r\n\r\n    static propTypes = {\r\n        onChange: PropTypes.func,\r\n        value: PropTypes.any,\r\n        type: PropTypes.string,\r\n    }\r\n\r\n    static defaultProps = {\r\n        onChange: null,\r\n        value: null,\r\n        type: null,\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (\r\n            this.props.value !== this.state.value &&\r\n            (prevProps.value !== this.props.value || prevState.value !== this.state.value)\r\n        ) {\r\n            if (this.input === document.activeElement) {\r\n                this.setState({ blurValue: String(this.props.value).toUpperCase() })\r\n            } else {\r\n                this.setState({ value: String(this.props.value).toUpperCase(), blurValue: !this.state.blurValue && String(this.props.value).toUpperCase() })\r\n            }\r\n        }\r\n    }\r\n\r\n    handleBlur() {\r\n        if (this.state.blurValue) {\r\n            this.setState({ value: this.state.blurValue, blurValue: null })\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setUpdatedValue(event.target.value, event)\r\n    }\r\n\r\n    // change RGB values with up/down arrows\r\n    handleKeyDown(event) {\r\n        const value = Number(String(event.target.value).replace(/%/g, ''))\r\n        if (!isNaN(value) && ([UP_KEY_CODE,DOWN_KEY_CODE].includes(event.keyCode))) {\r\n            const updatedValue = event.keyCode === UP_KEY_CODE ? value + 1 : value - 1\r\n            this.setUpdatedValue(updatedValue)\r\n        }\r\n    }\r\n\r\n    setUpdatedValue(value) {\r\n        const onChangeValue = this.props.colorFormat ? { [this.props.colorFormat]: value } : value\r\n        this.props.onChange(onChangeValue)\r\n        this.setState({ value })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='color-editor'>\r\n                <label style={ this.props.style.colorLabel  }>\r\n                    { this.props.colorFormat }:\r\n                </label>\r\n                <input\r\n                    style={ this.props.style.colorInput }\r\n                    ref={ input => this.input = input }\r\n                    value={ this.state.value }\r\n                    onKeyDown={ this.handleKeyDown }\r\n                    onChange={ this.handleChange }\r\n                    onBlur={ this.handleBlur }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ColorEditor;\r\n","import React, { Component } from 'react';\r\nimport HueSpectrum from './Components/HueSpectrum';\r\nimport SaturationSpectrum from './Components/SaturationSpectrum';\r\nimport DEFAULT_COLOR from \"./Components/DefaultColor\";\r\nimport tinycolor from \"tinycolor2\";\r\nimport RelatedColors from './Components/RelatedColors';\r\nimport ColorEditor from \"./Components/ColorEditor\";\r\nimport { toFullColor } from './Components/ColorUtilities'\r\nimport { clone } from 'lodash';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport \"./App.css\";\r\nimport './CSS/title.css'\r\n\r\nclass ColorPicker extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            curColor: DEFAULT_COLOR,\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(color) {\r\n        if (color.r || color.g || color.b) {\r\n            var { r,g,b } = tinycolor(this.state.curColor).toRgb();\r\n            if (color.r || color.r===0) {\r\n                r = color.r\r\n            }\r\n            if (color.g || color.g===0) {\r\n                g = color.g\r\n            }\r\n            if (color.b || color.b===0) {\r\n                b = color.b\r\n            }\r\n            this.setState({\r\n                curColor: tinycolor({ r:r,g:g,b:b }).toHsv(),\r\n            });\r\n        }\r\n\r\n        else if (color.h || color.s ||color.v)  {\r\n            var { h,s,v } = tinycolor(this.state.curColor).toHsv();\r\n            if (color.h || color.h===0) {\r\n                h = color.h\r\n            }\r\n            if (color.s || color.s===0) {\r\n                s = color.s\r\n            }\r\n            if (color.v || color.v===0) {\r\n                v = color.v\r\n            }\r\n            this.setState({\r\n                curColor: tinycolor({ h:h,s:s,v:v }).toHsv(),\r\n            });\r\n        }\r\n        else if (color.hex) {\r\n            if (tinycolor(color.hex).isValid()) {\r\n                this.setState({\r\n                    curColor: tinycolor(color.hex).toHsv(),\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const baseColor = toFullColor(this.state.curColor);\r\n\r\n        let complement = clone(baseColor).complement().toHexString().toUpperCase();\r\n        let analogArray = tinycolor(this.props.color).analogous();\r\n        let triadArray = tinycolor(this.props.color).triad();\r\n        let tetradArray = tinycolor(this.props.color).tetrad();\r\n\r\n        const mono = clone(baseColor).lighten(40).desaturate(40).toHexString().toUpperCase();\r\n        const triad1 = clone(baseColor).triad()[1].toHexString().toUpperCase();\r\n        const triad2 = clone(baseColor).triad()[2].toHexString().toUpperCase();\r\n\r\n        const tetrad1 = clone(baseColor).tetrad()[1].toHexString().toUpperCase();\r\n        const tetrad2 = clone(baseColor).tetrad()[2].toHexString().toUpperCase();\r\n        const tetrad3 = clone(baseColor).tetrad()[3].toHexString().toUpperCase();\r\n\r\n        const colorLabel = {\r\n            textAlign: 'center',\r\n            color: '#222',\r\n            paddingTop: '3px',\r\n            paddingBottom: '4px',\r\n            package: '4px',\r\n            textTransform: 'capitalize',\r\n        };\r\n        const colorInput = {\r\n            border: 'none',\r\n            boxShadow: 'inset 0 0 0 1px #ccc',\r\n            width:'65px',\r\n            marginRight: '8px',\r\n            marginLeft: '4px',\r\n            fontFamily: 'Roboto',\r\n            fontWeight: 700,\r\n            fontSize: 'x-large',\r\n        };\r\n\r\n        const redInput = {\r\n            colorInput:{\r\n                ...colorInput,\r\n                color:'red',\r\n            },\r\n            colorLabel:{\r\n                ...colorLabel,\r\n                color:'red',\r\n                textTransform: 'upperCase',\r\n            }\r\n        }\r\n        const GreenInput = {\r\n            colorInput:{\r\n                ...colorInput,\r\n                color:'green',\r\n            },\r\n            colorLabel:{\r\n                ...colorLabel,\r\n                color:'green',\r\n                textTransform: 'upperCase',\r\n            }\r\n        }\r\n        const BlueInput = {\r\n            colorInput:{\r\n                ...colorInput,\r\n                color:'blue',\r\n                textTransform: 'upperCase',\r\n            },\r\n            colorLabel:{\r\n                ...colorLabel,\r\n                color:'blue',\r\n                textTransform: 'upperCase',\r\n            }\r\n        }\r\n        const hexInput = {\r\n            colorInput:{\r\n                ...colorInput,\r\n                color:'black',\r\n                textTransform: 'upperCase',\r\n                width:'120px',\r\n            },\r\n            colorLabel:{\r\n                ...colorLabel,\r\n                color:'black',\r\n                textTransform: 'upperCase',\r\n            }\r\n        }\r\n        const HSVInput = {\r\n            colorInput:{\r\n                ...colorInput,\r\n                textTransform: 'upperCase',\r\n            },\r\n            colorLabel:{\r\n                ...colorLabel,\r\n                textTransform: 'upperCase',\r\n            }\r\n        }\r\n\r\n        const shadowX = ((tinycolor(this.state.curColor).toHsv().s - .5)*20).toString()+'px';\r\n        const shadowY = ((tinycolor(this.state.curColor).toHsv().v - .5)*20).toString()+'px';\r\n\r\n        return (\r\n            <div style={{ 'background':mono }}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <div className='container' style={{paddingTop:'5px', marginTop:'5px'}}>\r\n                            <h1 className=\"vectro\" style={{ background:\"black\", paddingLeft:'5px', paddingRight:'20px'\r\n                                , borderRadius: \"10px\"  }}>\r\n                                <span className=\"vectro-bar\" style={{ '--xPos':shadowX, '--yPos':shadowY, '--color':tetrad1 }}>I</span>\r\n                                <span className=\"vectro-bar\" style={{ '--xPos':shadowX, '--yPos':shadowY,'--color':tetrad2 }}>I</span>\r\n                                <span className=\"vectro-bar\" style={{ '--xPos':shadowX, '--yPos':shadowY,'--color':tetrad3, paddingRight:'20px' }}>I</span>\r\n                                <span className=\"vectro-body\" style={{ '--xPos':shadowX, '--yPos':shadowY,'--color':complement }}>\r\n                                    Coloration\r\n                                </span>\r\n                                <span className=\"vectro-bar\" style={{ '--xPos':shadowX, '--yPos':shadowY,'--color':tetrad1 }}>I</span>\r\n                                <span className=\"vectro-bar\" style={{ '--xPos':shadowX, '--yPos':shadowY,'--color':tetrad2 }}>I</span>\r\n                                <span className=\"vectro-bar\" style={{ '--xPos':shadowX, '--yPos':shadowY,'--color':tetrad3 }}>I</span>\r\n                            </h1>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <div className='container'>\r\n                            <div style={{ display:'flex', marginLeft:'flex'}} >\r\n                                <div style={{ width:'300px' }}>\r\n                                    <SaturationSpectrum value={ tinycolor(this.state.curColor).toHsv() } onChange={ this.handleChange } />\r\n                                    <div className=\"colorSwatches\" style={{ background: tinycolor(this.state.curColor).toHexString(), width:'300px' }}>\r\n                                        { tinycolor(this.state.curColor).toHexString().toUpperCase() }\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{ }}>\r\n                                    <HueSpectrum value={ tinycolor(this.state.curColor).toHsv() } onChange={ this.handleChange } />\r\n                                </div>\r\n                                <div style={{ display:'flex', padding:'5px', marginTop:'auto', marginBottom:'auto', paddingBottom:'20px' }}>\r\n                                    <div>\r\n                                        <div style={{padding: '5px'}}>\r\n                                            <ColorEditor\r\n                                                colorFormat=\"hex\"\r\n                                                value={ tinycolor(this.state.curColor).toHexString() }\r\n                                                onChange={ this.handleChange }\r\n                                                style={{ colorInput: hexInput.colorInput, colorLabel: hexInput.colorLabel }}\r\n                                            />\r\n                                        </div>\r\n                                        <div style={{padding: '5px'}}>\r\n                                            <ColorEditor\r\n                                                colorFormat=\"r\"\r\n                                                value={ tinycolor(this.state.curColor).toRgb().r }\r\n                                                onChange={ this.handleChange }\r\n                                                style={{ colorInput: redInput.colorInput, colorLabel: redInput.colorLabel }}\r\n                                            />\r\n                                            <ColorEditor\r\n                                                colorFormat=\"g\"\r\n                                                value={ tinycolor(this.state.curColor).toRgb().g }\r\n                                                onChange={ this.handleChange }\r\n                                                style={{ colorInput: GreenInput.colorInput, colorLabel: GreenInput.colorLabel }}\r\n                                            />\r\n                                            <ColorEditor\r\n                                                colorFormat=\"b\"\r\n                                                value={ tinycolor(this.state.curColor).toRgb().b }\r\n                                                onChange={ this.handleChange }\r\n                                                style={{ colorInput: BlueInput.colorInput, colorLabel: BlueInput.colorLabel }}\r\n                                            />\r\n                                        </div>\r\n                                        <div style={{padding: '5px'}}>\r\n                                            <ColorEditor\r\n                                                colorFormat=\"h\"\r\n                                                value={ Math.round(tinycolor(this.state.curColor).toHsv().h) }\r\n                                                onChange={ this.handleChange }\r\n                                                style={{ colorInput: HSVInput.colorInput, colorLabel: HSVInput.colorLabel }}\r\n                                            />\r\n                                            <ColorEditor\r\n                                                colorFormat=\"s\"\r\n                                                value={ Math.round(tinycolor(this.state.curColor).toHsv().s*100)+\"%\" }\r\n                                                onChange={ this.handleChange }\r\n                                                style={{ colorInput: HSVInput.colorInput, colorLabel: HSVInput.colorLabel }}\r\n                                            />\r\n                                            <ColorEditor\r\n                                                colorFormat=\"v\"\r\n                                                value={ Math.round(tinycolor(this.state.curColor).toHsv().v*100)+\"%\" }\r\n                                                onChange={ this.handleChange }\r\n                                                style={{ colorInput: HSVInput.colorInput, colorLabel: HSVInput.colorLabel }}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <div className='container'>\r\n                            <div style={{ display:'flex', margin:'auto', width:'750px'}}>\r\n                                <RelatedColors color={ this.state.curColor } />\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ColorPicker;\r\n","import tinycolor from 'tinycolor2';\n\nfunction fromRatio(color) {\n  return tinycolor.fromRatio(color);\n}\n\nfunction toFullColor(color) {\n  var { h } = tinycolor(color).toHsv();\n  return tinycolor({ h:h, s: 100, v: 100 });\n}\n\nfunction toHSV(value) {\n  if (typeof value === 'string') {\n    return tinycolor(value).toHsv();\n  }\n  return {\n    h: value.h,\n    s: value.s,\n    v: value.v,\n    a: value.a,\n  };\n}\n\nfunction toStringValue(color) {\n  const val = tinycolor(color);\n  return tinycolor(val).toRgb().a === 1 ? val.toHexString(): val.toRgbString();\n}\n\nexport {\n  fromRatio,\n  toFullColor,\n  toHSV,\n  toStringValue,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './CSS/spectrum.css';\nimport reportWebVitals from './reportWebVitals';\nimport ColorPicker from \"./ColorPicker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColorPicker />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}