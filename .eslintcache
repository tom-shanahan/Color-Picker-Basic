[{"C:\\Users\\tshan\\WebstormProjects\\color-picker-basic\\src\\Components\\SaturationSpectrum.js":"1","C:\\Users\\tshan\\WebstormProjects\\color-picker-basic\\src\\Components\\HueSpectrum.js":"2","C:\\Users\\tshan\\WebstormProjects\\color-picker-basic\\src\\index.js":"3","C:\\Users\\tshan\\WebstormProjects\\color-picker-basic\\src\\Components\\DefaultColor.js":"4","C:\\Users\\tshan\\WebstormProjects\\color-picker-basic\\src\\reportWebVitals.js":"5","C:\\Users\\tshan\\WebstormProjects\\color-picker-basic\\src\\Components\\ColorUtilities.js":"6","C:\\Users\\tshan\\WebstormProjects\\color-picker-basic\\src\\ColorPicker.js":"7","C:\\Users\\tshan\\WebstormProjects\\color-picker-basic\\src\\Components\\RelatedColors.js":"8","C:\\Users\\tshan\\WebstormProjects\\color-picker-basic\\src\\Components\\ColorEditor.js":"9"},{"size":4141,"mtime":1608757942428,"results":"10","hashOfConfig":"11"},{"size":4153,"mtime":1608759201467,"results":"12","hashOfConfig":"11"},{"size":531,"mtime":1608226877585,"results":"13","hashOfConfig":"11"},{"size":114,"mtime":1608753960562,"results":"14","hashOfConfig":"11"},{"size":362,"mtime":1607193088477,"results":"15","hashOfConfig":"11"},{"size":619,"mtime":1608760572229,"results":"16","hashOfConfig":"11"},{"size":7423,"mtime":1608774151183,"results":"17","hashOfConfig":"11"},{"size":6170,"mtime":1608763602685,"results":"18","hashOfConfig":"11"},{"size":2951,"mtime":1608773348374,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"vabmko",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\tshan\\WebstormProjects\\color-picker-basic\\src\\Components\\SaturationSpectrum.js",[],["41","42"],"C:\\Users\\tshan\\WebstormProjects\\color-picker-basic\\src\\Components\\HueSpectrum.js",["43"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport tinycolor from \"tinycolor2\";\r\nimport { toHSV } from './ColorUtilities';\r\n\r\nclass HueSpectrum extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hue: 0,\r\n        }\r\n        this.getPointerPosition = this.getPointerPosition.bind(this);\r\n        this.updateHue = this.updateHue.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleMouseUp = this.handleMouseUp.bind(this);\r\n        this.handleMouseDown = this.handleMouseDown.bind(this);\r\n        this.getContainerRenderWindow = this.getContainerRenderWindow.bind(this);\r\n        this.handleMouseMove = this.handleMouseMove.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        onChange: PropTypes.func,\r\n        value: PropTypes.any,\r\n        height: PropTypes.number,\r\n        width: PropTypes.number,\r\n        pointerSize: PropTypes.array,\r\n    }\r\n\r\n    static defaultProps = {\r\n        onChange: null,\r\n        value: null,\r\n        height: 300,\r\n        width: 30,\r\n        pointerSize: [4,28],\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const element = this.getContainerRenderWindow()\r\n        element.removeEventListener('mousemove', this.handleChange)\r\n        element.removeEventListener('mouseup', this.handleMouseUp)\r\n    }\r\n\r\n    handleMouseDown(event) {\r\n        this.handleChange(event)\r\n        const element = this.getContainerRenderWindow()\r\n        element.addEventListener(\"mousemove\", this.handleChange)\r\n        element.addEventListener(\"mouseup\", this.handleMouseUp)\r\n    }\r\n\r\n    handleChange(event) {\r\n        const yPos = this.handleMouseMove(event);\r\n        this.updateHue(yPos);\r\n        this.props.onChange(this.hsv)\r\n    }\r\n\r\n    handleMouseMove(event) {\r\n        let bounds = document.getElementById('hueBar').getBoundingClientRect()\r\n        return (event.clientY - bounds.top);\r\n    }\r\n\r\n    updateHue(yPos) {\r\n        let curY = Math.max(Math.min(yPos, this.props.height),0)\r\n        this.hsv.h = Math.round((curY / this.props.height) * 360);\r\n        const newHsv = {\r\n            ...this.hsv,\r\n        };\r\n        this.setState({\r\n            hue: this.hsv.h,\r\n        });\r\n        this.hsv = newHsv;\r\n    }\r\n\r\n    handleMouseUp() {\r\n        const element = this.getContainerRenderWindow()\r\n        element.removeEventListener('mousemove', this.handleChange)\r\n        element.removeEventListener('mouseup', this.handleMouseUp)\r\n    }\r\n\r\n    getContainerRenderWindow() {\r\n        const { container } = this\r\n        let renderWindow = window\r\n        while (!renderWindow.document.contains(container) && renderWindow.parent !== renderWindow) {\r\n            renderWindow = renderWindow.parent\r\n        }\r\n        return renderWindow\r\n    }\r\n\r\n    getPointerPosition() {\r\n        const { height, pointerSize } = this.props;\r\n        const position = Math.round(this.hsv.h * height / 360);\r\n        const diff = Math.round(pointerSize[0] / 2);\r\n        return position - diff;\r\n    }\r\n\r\n    render() {\r\n        const { value, pointerSize, height, width } = this.props;\r\n        const { hue } = this.state;\r\n        this.hsv = tinycolor(value).toHsv();\r\n        // Prevents pointer from returning to top after max hue\r\n        if (hue === 360 && this.hsv.h === 0) {\r\n            this.hsv.h = 360;\r\n        }\r\n        const hueBarStyle = {\r\n            height: height,\r\n            width: width,\r\n        };\r\n\r\n        const pointerStyle = {\r\n            height: pointerSize[0],\r\n            width: pointerSize[1],\r\n            top: this.getPointerPosition(),\r\n            display: 'block',\r\n        };\r\n\r\n        return (\r\n            <div\r\n                className=\"hue-spectrum\"\r\n                id=\"hueBar\"\r\n                style={hueBarStyle}\r\n                onMouseDown={this.handleMouseDown}\r\n                onMouseMove={this.handleMouseMove}\r\n                onMouseUp={this.handleMouseUp}\r\n            >\r\n                {/*TODO: change pointer class*/}\r\n                <div className=\"saturation-drag\" style={pointerStyle} >\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HueSpectrum;\r\n","C:\\Users\\tshan\\WebstormProjects\\color-picker-basic\\src\\index.js",[],"C:\\Users\\tshan\\WebstormProjects\\color-picker-basic\\src\\Components\\DefaultColor.js",[],"C:\\Users\\tshan\\WebstormProjects\\color-picker-basic\\src\\reportWebVitals.js",[],"C:\\Users\\tshan\\WebstormProjects\\color-picker-basic\\src\\Components\\ColorUtilities.js",[],"C:\\Users\\tshan\\WebstormProjects\\color-picker-basic\\src\\ColorPicker.js",["44","45","46","47","48","49","50"],"C:\\Users\\tshan\\WebstormProjects\\color-picker-basic\\src\\Components\\RelatedColors.js",["51"],"import React, { Component } from 'react';\r\nimport tinycolor from \"tinycolor2\";\r\nimport \"../App.css\"\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass RelatedColors extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            displayType: \"\",\r\n        }\r\n        this.changeDisplay = this.changeDisplay.bind(this);\r\n    }\r\n\r\n    static propTypes = {\r\n        color: PropTypes.any,\r\n    }\r\n\r\n    static defaultProps = {\r\n        color: null,\r\n    }\r\n\r\n    changeDisplay(event) {\r\n        this.setState({\r\n            displayType: event.target.value,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let color0 = null;\r\n        let color1 = null;\r\n        let color2 = null;\r\n        let color3 = null;\r\n        let color4 = null;\r\n\r\n        let complementColor = tinycolor(this.props.color).complement().toHexString().toUpperCase();\r\n        let mono10 = tinycolor(this.props.color).lighten(10).toHexString().toUpperCase();\r\n        let mono20 = tinycolor(this.props.color).lighten(20).toHexString().toUpperCase();\r\n        let mono30 = tinycolor(this.props.color).lighten(30).toHexString().toUpperCase();\r\n        let analogArray = tinycolor(this.props.color).analogous();\r\n        let triadArray = tinycolor(this.props.color).triad();\r\n        let tetradArray = tinycolor(this.props.color).tetrad();\r\n\r\n        let current = tinycolor(this.props.color).toHexString().toUpperCase();\r\n        let { displayType } = this.state;\r\n        switch (displayType) {\r\n            default:\r\n                color0 = null;\r\n                color1 = null;\r\n                color2 = null;\r\n                color3 = null;\r\n                color4 = null;\r\n                break;\r\n            case 'Complementary Colors:':\r\n                color0 = current;\r\n                color1 = complementColor;\r\n                color2 = null;\r\n                color3 = null;\r\n                color4 = null;\r\n                break;\r\n            case 'Monochromatic Colors:':\r\n                color0 = current;\r\n                color1 = mono10;\r\n                color2 = mono20;\r\n                color3 = mono30;\r\n                color4 = null;\r\n                break;\r\n            case 'Analogous Colors:':\r\n                color0 = current;\r\n                color1 = analogArray[1].toHexString().toUpperCase();\r\n                color2 = analogArray[2].toHexString().toUpperCase();\r\n                color3 = analogArray[4].toHexString().toUpperCase();\r\n                color4 = analogArray[5].toHexString().toUpperCase();\r\n                break;\r\n            case 'Triadic Colors:':\r\n                color0 = current;\r\n                color1 = triadArray[1].toHexString().toUpperCase();\r\n                color2 = triadArray[2].toHexString().toUpperCase();\r\n                color3 = null;\r\n                color4 = null;\r\n                break;\r\n            case 'Tetradic Colors:':\r\n                color0 = current;\r\n                color2 = tetradArray[1].toHexString().toUpperCase();\r\n                color3 = tetradArray[2].toHexString().toUpperCase();\r\n                color4 = tetradArray[3].toHexString().toUpperCase();\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <FormControl style={{ width: '250px'}}>\r\n                        <InputLabel shrink >\r\n                            Color Scheme Type:\r\n                        </InputLabel>\r\n                        <Select\r\n                            // labelId=\"demo-simple-select-placeholder-label-label\"\r\n                            // id=\"demo-simple-select-placeholder-label\"\r\n                            value={ this.state.displayType }\r\n                            onClick={ this.changeDisplay }\r\n                            displayEmpty\r\n                            // className={classes.selectEmpty}\r\n                        >\r\n                            <MenuItem value=\"\" disabled><em>Choose a Color Scheme!</em></MenuItem>\r\n                            <MenuItem value={ 'Complementary Colors:' }>Complementary Colors</MenuItem>\r\n                            <MenuItem value={ 'Monochromatic Colors:' }>Monochromatic Colors</MenuItem>\r\n                            <MenuItem value={ 'Analogous Colors:' }>Analogous Colors</MenuItem>\r\n                            <MenuItem value={ 'Triadic Colors:' }>Triadic Colors</MenuItem>\r\n                            <MenuItem value={ 'Tetradic Colors:' }>Tetradic Colors</MenuItem>\r\n                        </Select>\r\n                        {/*<FormHelperText>Select a Color Scheme</FormHelperText>*/}\r\n                    </FormControl>\r\n                </div>\r\n\r\n                <div>\r\n                    {/*<h4>{ displayType }</h4>*/}\r\n                    {(color0 !== null) &&\r\n                    <div className=\"colorSwatches\" style={{ background: color0 }}>\r\n                        {color0}\r\n                        </div>\r\n                    }\r\n                    {(color1 !== null) &&\r\n                    <div className=\"colorSwatches\" style={{ background: color1 }}>\r\n                        {color1}\r\n                    </div>\r\n                    }\r\n                    {(color2 !== null) &&\r\n                    <div className=\"colorSwatches\" style={{ background: color2 }}>\r\n                        {color2}\r\n                    </div>\r\n                    }\r\n                    {(color3 !== null) &&\r\n                    <div className=\"colorSwatches\" style={{ background: color3 }}>\r\n                        {color3}\r\n                    </div>\r\n                    }\r\n                    {(color4 !== null) &&\r\n                    <div className=\"colorSwatches\" style={{ background: color4 }}>\r\n                        {color4}\r\n                    </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RelatedColors;\r\n","C:\\Users\\tshan\\WebstormProjects\\color-picker-basic\\src\\Components\\ColorEditor.js",["52"],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":4,"column":10,"nodeType":"59","messageId":"60","endLine":4,"endColumn":15},{"ruleId":"57","severity":1,"message":"61","line":10,"column":8,"nodeType":"59","messageId":"60","endLine":10,"endColumn":16},{"ruleId":"57","severity":1,"message":"62","line":13,"column":9,"nodeType":"59","messageId":"60","endLine":13,"endColumn":13},{"ruleId":"57","severity":1,"message":"63","line":71,"column":13,"nodeType":"59","messageId":"60","endLine":71,"endColumn":24},{"ruleId":"57","severity":1,"message":"64","line":72,"column":13,"nodeType":"59","messageId":"60","endLine":72,"endColumn":23},{"ruleId":"57","severity":1,"message":"65","line":73,"column":13,"nodeType":"59","messageId":"60","endLine":73,"endColumn":24},{"ruleId":"57","severity":1,"message":"66","line":80,"column":15,"nodeType":"59","messageId":"60","endLine":80,"endColumn":21},{"ruleId":"57","severity":1,"message":"67","line":81,"column":15,"nodeType":"59","messageId":"60","endLine":81,"endColumn":21},{"ruleId":"57","severity":1,"message":"68","line":6,"column":8,"nodeType":"59","messageId":"60","endLine":6,"endColumn":22},{"ruleId":"57","severity":1,"message":"61","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":16},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'toHSV' is defined but never used.","Identifier","unusedVar","'reactCSS' is defined but never used.","'blue' is defined but never used.","'analogArray' is assigned a value but never used.","'triadArray' is assigned a value but never used.","'tetradArray' is assigned a value but never used.","'triad1' is assigned a value but never used.","'triad2' is assigned a value but never used.","'FormHelperText' is defined but never used.","no-global-assign","no-unsafe-negation"]